{"version":3,"sources":["images/chair_empty.png","images/chair_filled.png","components/Home.js","components/Signup.js","components/User.js","components/Signin.js","components/Signout.js","components/Search.js","components/BookFlight.js","components/Test.js","components/UserProfile.js","components/Users.js","components/NavBar.js","components/Airplanes.js","components/Flights.js","components/AdminHome.js","components/Footer.js","Routes.js","serviceWorker.js","index.js"],"names":["module","exports","Home","localStorage","name","Signup","state","is_admin","_handleSubmit","bind","_handleInputName","_handleInputAdmin","event","preventDefault","axios","post","this","then","result","console","log","urlstr","window","location","href","includes","split","replace","setState","target","value","onSubmit","action","type","placeholder","required","onInput","defaultValue","onClick","defaultChecked","Component","User","user_id","getUserId","Storage","temp","getItem","setUserId","id","setItem","getName","setName","n","isAdmin","setAdmin","ad","Signin","handleSubmit","handleChange","userDetail","get","results","userslist","data","i","length","admin","onChange","Signout","SERVER_URL","Search","fetchFlights","f","t","listFlights","from","to","push","flights","hasLoaded","class","SearchForm","_handleInputFrom","_handleInputTo","toUpperCase","props","SearchResult","width","map","flight","key","align","date","flight_num","airplane_id","BookFlight","seats","lastChecked","SERVER_URL_FLIGHT","match","params","setTimeout","_handleCheck","uncheckSeat","persist","seatId","url","seatTaken","find","s","is_taken","checked","dataset","booked","taken_by_user","divGrid","display","gridTemplateColumns","airplane","columns","gridTemplateRows","rows","maxWidth","minWidth","divItemTaken","borderRadius","border","backgroundColor","color","margin","textAlign","padding","cursor","divItemFree","spanText","chairImg","height","divCheckbox","alphabet","className","style","sort","a","b","row","column","seat","htmlFor","data-booked","src","chair_filled","chair_empty","Test","UserProfile","user","fetchUser","reservation_column","reservation_row","Users","users","fetchUsers","NavBar","Airplanes","airplanes","saveAirplane","_handleChangeName","_handleChangeRows","_handleChangeColumns","fetchAirplanes","backgroundImage","backgroundSize","backgroundRepeat","for","minHeight","seatArray","j","seatFillers","SERVER_URL_PLANES","Flights","saveFlight","Flightsform","_handleChange","_handleChangeDate","_handleChangeFrom","_handleChangeTo","_handleChangeAirplane_id","fetchPlanes","disabled","selected","p","Gallery","Footer","fontSize","Routes","exact","path","component","AdminHome","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.447dfe31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chair_empty.e143c198.png\";","module.exports = __webpack_public_path__ + \"static/media/chair_filled.fa6ad40d.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    return (\n        <div>\n            <h2>🔥 Welcome to CrashTastic Airlines {localStorage.name} 🔥 </h2>\n        </div>\n    )\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\n// use this URL to query using axios below\nconst SERVER_URL = 'https://crashtasticairlines.herokuapp.com/users.json';\n\nclass Signup extends Component {\n  constructor () {\n    super();\n    this.state = {\n      // set the name of the user in _handleInput\n      name: \"\",\n      is_admin: false\n    };\n\n    this._handleSubmit = this._handleSubmit.bind(this);\n    this._handleInputName = this._handleInputName.bind(this);\n    this._handleInputAdmin = this._handleInputAdmin.bind(this);\n  }\n\n  // when the form is submitted, make a post request to the backend to create a user.\n  _handleSubmit (event) {\n    event.preventDefault();\n    axios.post(SERVER_URL, { name: this.state.name, is_admin: this.state.is_admin }).then((result) => {\n      // clear the form\n      // TODO: handle the user in rails. How does this state persist?\n      console.log(result);\n      let urlstr = window.location.href;\n      if (urlstr.includes('#')) {\n        urlstr = urlstr.split('#')[0] + '#/'\n      }\n      window.location.replace(urlstr);\n    });\n  }\n\n  // as you change the input field, update the state.name to reflect\n  _handleInputName (event) {\n    this.setState({name: event.target.value})\n  }\n  _handleInputAdmin () {\n    this.setState({is_admin: true});\n  }\n\n  render() {\n      return(\n        <div>\n          <h1>Sign up</h1>\n          <form onSubmit={ this._handleSubmit } action=\"/\">\n          <label>\n            Name:\n            <input name=\"name\" type=\"text\" placeholder=\"type your name here\" required onInput={ this._handleInputName } defaultValue=\"\"/>\n          </label>\n          <br />\n          <label>\n          Is admin:\n          <input name=\"is_admin\"\n            type=\"checkbox\"\n            onClick={this._handleInputAdmin} defaultChecked={this.state.is_admin} />\n          </label>\n          <br />\n          <input type=\"submit\" value=\"Sign up\" />\n          </form>\n        </div>\n      );\n  }\n}\n\n\nexport default Signup;\n","const User = (function () {\n    let name = \"\";\n    let user_id = 0;\n    let is_admin = false;\n\n    const getName = function() {\n      \n        if (typeof (Storage) !== \"undefined\") {\n          let temp = localStorage.getItem('full_name');\n          if (temp != null) {\n            name = temp; \n          }\n        }\n  \n        return name;    // Or pull this from cookie/localStorage\n      };\n\n    const setName = function(n) {\n        if (n!==null) {\n          name = n;     \n          // Also set this in cookie/localStorage\n          if (typeof (Storage) !== \"undefined\") {\n            localStorage.setItem('name', name);\n          }\n        }\n    };\n\n    const getUserId = function() {\n        if (typeof (Storage) !== \"undefined\") {\n          let temp = localStorage.getItem('user_id');\n          if (temp != null) {\n            user_id = temp; //playerA or playerB\n          }\n        }\n          return user_id;    // Or pull this from cookie/localStorage\n    };\n      \n    const setUserId = function(id) {\n        user_id = id;     \n          // Also set this in cookie/localStorage\n          //console.log(user_id);\n        if (typeof (Storage) !== \"undefined\") {\n            localStorage.setItem('user_id', user_id);\n        }\n    };\n      \n    const isAdmin = function() {\n        if (typeof (Storage) !== \"undefined\") {\n          let temp = localStorage.getItem('is_admin');\n          if (temp != null ) {\n            if (temp===\"true\" || temp === true) {\n              is_admin = true;\n            } else {\n              is_admin = false;\n            }\n          }\n        }\n        return is_admin;    // Or pull this from cookie/localStorage\n      };\n      \n    const setAdmin = function(ad) {\n        is_admin = ad;     \n          // Also set this in cookie/localStorage\n        if (typeof (Storage) !== \"undefined\") {\n            localStorage.setItem('is_admin', is_admin);\n        }\n    };\n      \n      return {\n        getUserId: getUserId,\n        setUserId: setUserId,\n        getName: getName,\n        setName: setName,\n        isAdmin: isAdmin,\n        setAdmin: setAdmin\n      }\n    \n  } )();\n\nexport default User;","import React, { Component } from 'react';\nimport User from './User'\nimport axios from 'axios';\n\nconst SERVER_URL = 'https://crashtasticairlines.herokuapp.com/users.json';\n\nclass Signin extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({name: event.target.value})\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let user_id = 0;\n        let userDetail = null;\n        axios.get(SERVER_URL).then((results) => {\n            const userslist = results.data;\n            console.log(this.state.name);\n            console.log(userslist);\n            for (let i=0; i<userslist.length; i++) {\n                if (userslist[i].name === this.state.name) {\n                  user_id = userslist[i].id;\n                  userDetail = userslist[i];\n                  break;\n                }\n                else {\n                  console.log('please sign up');\n                  let urlstr = window.location.href;\n                if (urlstr.includes(\"#\")) {\n                    urlstr = urlstr.split(\"#\")[0] + \"#/Signup\"\n                }\n\n                window.location.replace(urlstr);\n                //return (<SignUp />)\n                }\n            }\n            console.log(user_id);\n            if ( user_id > 0 ) {\n                console.log(\"Sign_in=\" + userDetail.name);\n                //user id found\n                //direct to homepage\n                User.setName(userDetail.name);\n                User.setUserId(user_id);\n                User.setAdmin(userDetail.admin);\n\n                //http://localhost:3000/#/home\n                let urlstr = window.location.href;\n                if (urlstr.includes(\"#\")) {\n                    urlstr = urlstr.split(\"#\")[0] + \"#/\"\n                }\n\n                window.location.replace(urlstr);\n                //return (<Home />)\n            }\n\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Sign in</h1>\n                <form onSubmit={this.handleSubmit}>\n                <label>\n                    Name:\n                    <input type=\"name\" placeholder=\"type your name here\"\n                    onChange={this.handleChange} defaultValue=\"\" />\n                </label>\n                <br />\n\n                <input type=\"submit\" value=\"Sign in\" />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Signin;\n","import React, { Component } from 'react';\nimport User from './User';\n\nclass Signout extends Component {\n    constructor() {\n        super();\n\n    User.setName('');\n    User.setUserId(-1);\n    User.setAdmin(false);\n\n    }\n    render() {\n        return(\n            <div>\n                <h1>🔥 Thank you for booking CrashTastic Airline 🔥 </h1>\n                <h2>I'm sure you will have a good flight...</h2>\n                <h3>See you next time...</h3>\n            </div>\n            \n        );\n    }\n}\nexport default Signout;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../search.css';\nimport { Link } from 'react-router-dom';\n\n\n\nconst SERVER_URL = 'https://crashtasticairlines.herokuapp.com/flights.json';\n\nclass Search extends Component {\n    constructor () {\n        super();\n        this.state = {\n          flights: [],\n          hasLoaded: false\n        }\n        this.fetchFlights = this.fetchFlights.bind( this );\n      }\n       fetchFlights = (f, t) => {\n        axios.get(SERVER_URL).then((results) => {\n            // console.log(results.data);\n            let listFlights = [];\n            for (let i = 0; i < results.data.length; i++) {\n                if ( (results.data[i].from === f) && (results.data[i].to === t) )\n                // console.log(results.data[i]);\n                listFlights.push(results.data[i]);\n            };\n            this.setState({flights: listFlights});\n            console.log(this.state.flights);\n          })\n        };\n\n    render() {\n        return(\n            <div class=\"flightSearchBar\">\n                <h1>🔥 Welcome to CrashTastic Airlines! 🔥 </h1>\n                <p>Where are we <i>\"flying\"</i> to today?</p>\n                <SearchForm onSubmit={ this.fetchFlights } />\n                <SearchResult flights={ this.state.flights } />\n            </div>\n\n        );\n    }\n}\n\nclass SearchForm extends Component {\n    constructor() {\n        super();\n        this.state = {from: '', to: ''}\n        this._handleInputFrom = this._handleInputFrom.bind( this );\n        this._handleInputTo = this._handleInputTo.bind( this );\n        this._handleSubmit = this._handleSubmit.bind( this );\n    }\n    _handleInputFrom(event) {\n        this.setState({from: event.target.value.toUpperCase()})\n    }\n\n    _handleInputTo(event) {\n        this.setState({to: event.target.value.toUpperCase()})\n    }\n\n    _handleSubmit(event) {\n        event.preventDefault();\n        this.props.onSubmit(this.state.from, this.state.to);\n    }\n    render() {\n        return(\n            <div>\n            <form onSubmit={ this._handleSubmit }>\n                <input type=\"search\" placeholder=\"from\" required onInput={ this._handleInputFrom } defaultValue=\"\" />\n                <input type=\"search\" placeholder=\"to\" required onInput={ this._handleInputTo } defaultValue=\"\" />\n                <input type=\"submit\" value=\"search\" />\n            </form>\n            </div>\n        );\n    }\n}\nclass SearchResult extends Component {\n    render() {\n        return(\n            <div>\n                <h3>Flight Search Results</h3>\n                <table>\n                    <thead>\n                        <tr>\n                            <th width=\"20%\">Date</th>\n                            <th width=\"20%\">Flight</th>\n                            <th width=\"20%\">From</th>\n                            <th width=\"20%\">  </th>\n                            <th width=\"20%\">To</th>\n                            <th width=\"20%\">Plane</th>\n                        </tr>\n                    </thead>\n                    {this.props.flights.map( (flight) =>\n                    <tbody key={flight.id + 1}>\n                        <tr key={flight.id + 2}>\n                            <td align=\"center\" key={flight.id + 3}>{flight.date}</td>\n                            <td align=\"center\" key={flight.id + 4}><Link to={ '/flight/' + flight.id }>{flight.flight_num}</Link></td>\n                            <td align=\"center\" key={flight.id + 5}>{flight.from}</td>\n                            <td align=\"center\" key={flight.id + 6}> ✈ </td>\n                            <td align=\"center\" key={flight.id + 7}>{flight.to}</td>\n                            <td align=\"center\" key={flight.id + 8}>{flight.airplane_id}</td>\n                        </tr>\n                    </tbody>\n\n                    )}\n                </table>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport User from './User';\nimport chair_empty from '../images/chair_empty.png';\nimport chair_filled from '../images/chair_filled.png';\n\nclass BookFlight extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      seats: \"\",\n      flight: \"\",\n      // hasLoaded to check whether the API request has completed before rendering below\n      hasLoaded: false,\n\n      lastChecked: \"\",\n      name: localStorage.name,\n    };\n    // use this URL to query using axios below\n    const SERVER_URL_FLIGHT = 'https://crashtasticairlines.herokuapp.com/flights/' + this.props.match.params.id + '.json';\n    // fetch the information about the flight that this page is on\n    // recursively call every 4 secs to check if the seats have been checked by other users!\n    // TODO: add in user name to seat table\n    const fetchFlights = () => {axios.get(SERVER_URL_FLIGHT)\n        .then((results) => {\n          this.setState({\n            flight: results.data,\n            seats: results.data.flight.seats,\n            hasLoaded: true});\n            setTimeout(fetchFlights, 4000);\n            console.log(\"get\")\n        })};\n      fetchFlights();\n\n      // bind the handlecheck function so I can use this.\n      this._handleCheck = this._handleCheck.bind(this);\n      this.uncheckSeat = this.uncheckSeat.bind(this);\n  }\n\n// TODO: when you click twice on a is_taken true element, it will block the first time, then not run any of this code, and check the box. This won't affect the database.\n  _handleCheck (event) {\n    // OH GOD\n      event.preventDefault();\n      event.persist();\n\n    // when there is a change, we have to detect which one was unchecked, and there isnt a dom method for that so we loop through here and add it in to the ajax request.\n    // TODO: when the user checks a box, first check if it has been checked in the database since the last call.\n    const seatId = event.target.value;\n    // then check the box, and send this to the database so nobody else can snag the seat.\n    const url = \"https://crashtasticairlines.herokuapp.com/seats/\" + event.target.value + \".json\";\n    // use this URL to query using axios below\n    const SERVER_URL_FLIGHT = 'https://crashtasticairlines.herokuapp.com/flights/' + this.props.match.params.id + '.json';\n    axios.get(SERVER_URL_FLIGHT).then((results) => {\n      this.setState({ seats: results.data.flight.seats });\n      return results;\n    }).then((results) => {\n      const seatTaken = results.data.flight.seats.find((s) => { return s.id == seatId })\n      // check that it hasnt been selected by someone else.\n      console.log(\"seat taken \" + seatTaken.is_taken );\n      if (seatTaken.is_taken == false) {\n        event.target.checked = true;\n        // uncheck the lastChecked variable.\n\n        this.uncheckSeat();\n        // change the state of lastChecked to this element.\n        this.setState({lastChecked: event.target});\n        // change the database values\n        axios.post(url, {\n          is_taken: event.target.dataset.booked === \"true\" ? false : true,\n          taken_by_user: this.state.name,\n          }).then((results) => {\n          axios.get(SERVER_URL_FLIGHT).then((results) => {\n            this.setState({ seats: results.data.flight.seats });\n          })\n        });\n      }\n    });\n\n\n  }\n\n  uncheckSeat () {\n    console.log(this.state.lastChecked);\n    const SERVER_URL_FLIGHT = 'https://crashtasticairlines.herokuapp.com/flights/' + this.props.match.params.id + '.json';\n    const url = \"https://crashtasticairlines.herokuapp.com/seats/\" + this.state.lastChecked.value + \".json\";\n    axios.post(url, {\n      is_taken: false,\n      taken_by_user: \"\",\n      }).then((results) => {\n      axios.get(SERVER_URL_FLIGHT).then((results) => {\n        this.setState({ seats: results.data.flight.seats });\n      })});\n  }\n\n\n// TODO: when you press submit, save the data in the database, and take you to the users page.\n// Make association in database.\n  render() {\n    const flight = this.state.flight.flight;\n    if (flight) {\n\n      const divGrid = {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(\" + flight.airplane.columns + \", 1fr)\",\n        gridTemplateRows: \"repeat(\" + flight.airplane.rows + \", 1fr)\",\n        maxWidth: \"800px\",\n        minWidth: \"300px\",\n      };\n\n      const divItemTaken = {\n        borderRadius: \"3px\",\n        border: \"1px solid #ccc\",\n        backgroundColor: \"#eee\",\n\n        color: \"#aaa\",\n        margin: \"1px\",\n        textAlign: \"center\",\n        padding: \"8px\",\n        cursor: \"not-allowed\"\n      }\n\n      const divItemFree = {\n        borderRadius: \"3px\",\n        border: \"1px solid #ccc\",\n        backgroundColor: \"#eee\",\n\n        color: \"#555\",\n        margin: \"1px\",\n        textAlign: \"center\",\n        padding: \"8px\",\n        cursor: \"pointer\"\n      }\n\n      const spanText = {\n      }\n      const chairImg = {\n        width: \"60px\",\n        height: \"60px\",\n        display: \"block\",\n      }\n\n      const divCheckbox = {\n        display: \"none\",\n      }\n      const seats = this.state.seats;\n      const alphabet = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase().split('');\n      return(\n          <div>\n              <h1>🔥 Book a Flight with CrashTastic Airlines 🔥</h1>\n              <h2>Name: {this.state.name}</h2>\n              <h2>Flight { flight.flight_num }</h2>\n              <p>{ flight.date }: { flight.from } ✈ { flight.to }</p>\n              <p>Seats:</p>\n              <div className=\"planeContainer\">\n              <div style={divGrid}>\n                { seats.sort((a,b) => {\n                  return a.row - b.row || a.column - b.column\n                }).map((seat) =>\n                    <label htmlFor={ seat.id }  key={ seat.id } style={ seat.is_taken ? divItemTaken : divItemFree }>\n                      <input type=\"radio\" style={ divCheckbox } id={ seat.id } value={ seat.id } data-booked={ seat.is_taken ? true : false } onChange={ this._handleCheck } />\n                      <span style={spanText} >{ seat.column }{ alphabet[seat.row - 1] } { seat.taken_by_user }</span>\n                      <img src={ seat.is_taken ? chair_filled : chair_empty } style={chairImg} />\n                    </label>\n                  )\n                }\n                </div>\n              </div>\n          </div>\n      );\n    }\n    else {\n      return (\n        <p>loading</p>\n      )\n    }\n  }\n}\n\nexport default BookFlight;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n// use this URL to query using axios below\nconst SERVER_URL = 'https://crashtasticairlines.herokuapp.com/flights.json';\n\nclass Test extends Component {\n  constructor () {\n    super();\n    this.state = {\n      // the flights are loaded using axios below\n      flights: [],\n      // hasLoaded to check whether the API request has completed before rendering below\n      hasLoaded: false\n    };\n\n  // fetch the flights from the database every 4 seconds, save into state.flights to be used in render\n  const fetchFlights = () => {\n    axios.get(SERVER_URL).then((results) => {\n      this.setState({\n        flights: results.data,\n        hasLoaded: true});\n      setTimeout(fetchFlights, 4000);\n      })\n    };\n    fetchFlights();\n  }\n\n  render() {\n      return(\n          <div>\n              <h1>CrashTastic Airline</h1>\n                <p><i>All flight schedules</i></p>\n                <p>{ this.state.flights.map((flight) => <p><Link to={\"/flight/\" + flight.id }>{flight.date}: flight {flight.id} from {flight.from} to {flight.to} on airplane {flight.airplane_id}</Link></p>)}\n                </p>\n          </div>\n      );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass UserProfile extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      // set the name of the user in _handleInput\n      user: \"\",\n      hasLoaded: false,\n    };\n\n    // use this URL to query using axios below\n    const SERVER_URL = 'https://crashtasticairlines.herokuapp.com/users/' + this.props.match.params.id + '.json';\n\n    const fetchUser = () => {axios.get(SERVER_URL)\n        .then((results) => {\n          this.setState({\n            user: results.data,\n            hasLoaded: true});\n            setTimeout(fetchUser, 4000);\n        })};\n    fetchUser();\n  }\n\n  render() {\n    if (this.state.hasLoaded) {\n      return(\n        <div>\n          <h1>User Profile: { this.state.user.user.name }</h1>\n          <p>name: { this.state.user.user.name }</p>\n          <p>admin: { this.state.user.user.is_admin ? \"true\" : \"false\" }</p>\n          <p>flights:\n            <ul>\n            { this.state.user.user.flights.map((flight) => {\n              return <li><Link to={ '/flight/' + flight.id }>Flight: { flight.from } > { flight.to }, Seat: { flight.reservation_column }{ flight.reservation_row }</Link></li>\n            }) }\n            </ul>\n\n          </p>\n        </div>\n      );\n    }\n    else {\n      return  <div>loading...</div>\n    }\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n// use this URL to query using axios below\n// const SERVER_URL = 'http://localhost:3000/users.json';\nconst SERVER_URL = 'https://crashtasticairlines.herokuapp.com/users.json';\n\n\nclass Users extends Component {\n  constructor () {\n    super();\n    this.state = {\n      // the flights are loaded using axios below\n      users: [],\n      // hasLoaded to check whether the API request has completed before rendering below\n      hasLoaded: false\n    };\n\n  // fetch the flights from the database every 4 seconds, save into state.flights to be used in render\n  const fetchUsers = () => {\n    axios.get(SERVER_URL).then((results) => {\n      this.setState({\n        users: results.data,\n        hasLoaded: true});\n      setTimeout(fetchUsers, 4000);\n      })\n    };\n    fetchUsers();\n  }\n\n  render() {\n      return(\n          <div>\n              <h1>CrashTastic Airline</h1>\n              <h2>All Users</h2>\n                <p>{ this.state.users.map((user) => <p><Link to={ '/user/' + user.id }>{user.name}, admin: { user.is_admin ? \"true\" : \"false\" }</Link></p>)}\n                </p>\n          </div>\n      );\n  }\n}\n\nexport default Users;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './navbar.css';\n\nclass NavBar extends Component {\n  render() {\n    return(\n      <div class=\"NavBar\">\n            <Link to=\"/signup\"> Sign up</Link>  |\n            <Link to=\"/signin\"> Sign In</Link>  |\n\n            <Link to=\"/search\"> Search flight</Link>  |\n            <Link to=\"/flights\"> All flights</Link>  |\n            <Link to=\"/users\"> All users</Link>  | 🔥🔥🔥\n            <Link to=\"/signout\"> Sign Out, {localStorage.name}</Link>\n            <p>\n            <Link to=\"/admin\"> Admin</Link> |\n            <Link to=\"/admin/airplanes\"> Create Airplane</Link>  |\n            <Link to=\"/admin/flights\"> Create flight</Link>\n            </p>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport chair_empty from '../images/chair_empty.png';\nimport chair_filled from '../images/chair_filled.png';\n\n// use this URL to query using axios below\nconst SERVER_URL = 'https://crashtasticairlines.herokuapp.com/airplanes.json';\n\n\nclass Airplanes extends Component {\n  constructor () {\n    super();\n    this.state = {\n      // the airplanes are loaded using axios below\n      airplanes: [],\n      name: \"\",\n      rows: \"\",\n      columns: \"\",\n      // hasLoaded to check whether the API request has completed before rendering below\n      hasLoaded: false\n    };\n    this.saveAirplane = this.saveAirplane.bind(this);\n    this._handleChangeName = this._handleChangeName.bind(this);\n    this._handleChangeRows = this._handleChangeRows.bind(this);\n    this._handleChangeColumns = this._handleChangeColumns.bind(this);\n    this._handleSubmit = this._handleSubmit.bind(this);\n\n    // fetch the airplanes from the database every 4 seconds, save into state.airplanes to be used in render\n    const fetchAirplanes = () => {\n      axios.get(SERVER_URL).then((results) => {\n        // console.log(results.data[0]);\n        this.setState({\n          airplanes: results.data,\n          hasLoaded: true});\n        setTimeout(fetchAirplanes, 4000);\n        })\n      };\n      fetchAirplanes();\n    }\n\n    saveAirplane(name, rows, columns) {\n      axios.post(SERVER_URL, {\n        name: name,\n        rows: rows,\n        columns: columns,\n      }).then((result) => {\n\n        this.setState({airplanes: [... this.state.airplanes,\n        result.data]})\n      });\n    }\n\n  _handleSubmit(event) {\n    event.preventDefault();\n    this.saveAirplane(this.state.name, this.state.rows, this.state.columns);\n    this.setState( {\n      name: \"\",\n      rows: \"\",\n      columns: \"\",\n    }); // Reset the form.\n\n  }\n\n  _handleChangeName(event){\n    this.setState( { name: event.target.value } );\n  }\n\n  _handleChangeRows(event){\n    this.setState( { rows: event.target.value } );\n  }\n\n  _handleChangeColumns(event){\n    this.setState( { columns: event.target.value } );\n  }\n\n\n\n\n\n\n\n  render() {\n    const plane = this.state.airplanes;\n    const background = '/../images/chair_empty.png';\n    const divItemFree = {\n      borderRadius: \"3px\",\n      border: \"1px solid #ccc\",\n      backgroundColor: \"#eee\",\n      backgroundImage: \"url(\" + chair_empty + \")\",\n      backgroundSize: \"contain\",\n      backgroundRepeat: \"no-repeat\",\n      color: \"#555\",\n      margin: \"1px\",\n      textAlign: \"center\",\n      padding: \"8px\",\n    }\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase().split('');\n\n      return(\n          <div>\n              <h1>Create a New Airplane</h1>\n              <form onSubmit={this._handleSubmit}>\n                <label for=\"name\">Name: </label>\n                <input onChange={this._handleChangeName} value={this.state.name} type=\"text\" name=\"name\" placeholder=\"name\" required/>\n\n                <label for=\"rows\">Rows: </label>\n                <input onChange={this._handleChangeRows} value={this.state.rows} type=\"number\" name=\"rows\" placeholder=\"5\" required/>\n\n                <label for=\"columns\">Columns: </label>\n                <input onChange={this._handleChangeColumns}\n                value={this.state.columns} type=\"number\" name=\"columns\" placeholder=\"43\" required/>\n\n                <input type=\"submit\" value=\"Create\" />\n              </form>\n              <h2>All Airplanes</h2>\n                { this.state.airplanes.map((airplane) => {\n                  const divGrid = {\n                    display: \"grid\",\n                    gridTemplateColumns: \"repeat(\" + airplane.columns + \", auto)\",\n                    gridTemplateRows: \"repeat(\" + airplane.rows + \", auto)\",\n                    minWidth: \"300px\",\n                    minHeight: \"300px\",\n\n                  };\n                  let seatArray = [];\n                  let seats = airplane.rows * airplane.columns;\n                  for (let i=0; i < airplane.rows; i++) {\n                    for (let j=1; j < airplane.columns + 1; j++) {\n                      seatArray.push(j + alphabet[i]);\n                    }\n\n                  }\n                  let seatFillers = [];\n                  for (let i=0; i < seats; i++) {\n                    seatFillers.push(i);\n                  }\n                   return <div key={airplane.id}>\n                    <p> Airplane {airplane.name}: rows {airplane.rows} columns {airplane.columns}</p>\n                    <div style={divGrid}>\n                      { seatArray.map((s) => <div key={s} style={ divItemFree }>{s}</div>) }\n                    </div>\n                  </div>\n                })}\n          </div>\n    );\n  }\n}\n\n\n// class SeatDiagram extends Component {\n// const alphabet = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase().split('');\n// }\n\n\nexport default Airplanes;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './flights.css';\n\nconst SERVER_URL = 'https://crashtasticairlines.herokuapp.com/flights.json';\nconst SERVER_URL_PLANES = 'https://crashtasticairlines.herokuapp.com/airplanes.json';\n\n\nclass Flights extends Component {\n  constructor () {\n    super();\n    this.state = {\n      flights: [],\n      // hasLoaded to check whether the API request has completed before rendering below\n      hasLoaded: false\n    };\n    this.saveFlight = this.saveFlight.bind(this);\n\n  // fetch the flights from the database every 4 seconds, save into state.flights to be used in render\n  const fetchFlights = () => {\n    axios.get(SERVER_URL).then((results) => {\n      this.setState({\n        flights: results.data,\n        hasLoaded: true});\n      setTimeout(fetchFlights, 4000);\n      })\n    };\n    fetchFlights();\n  }\n\n    saveFlight(flight_num, date, from, to, airplane_id) {\n      axios.post(SERVER_URL, {\n        flight_num: flight_num,\n        date: date,\n        from: from,\n        to: to,\n        airplane_id: airplane_id,\n      }).then((result) => {\n      this.setState({\n        flights: [... this.state.flights, result.data]})\n      });\n  }\n\n  render(){\n    if (this.state.hasLoaded) {\n      return (\n        <div>\n  \t     <h1>CrashTastic Airline</h1>\n  \t      <Flightsform onSubmit={ this.saveFlight } />\n              <Gallery flights={ this.state.flights } />\n        </div>\n      );\n    }\n    else {\n      return <div>loading...</div>\n    }\n    }\n  }\n\n\n\n\n\n\n\n// -- Flight Form -- //\nclass Flightsform extends Component {\n  constructor(){\n    super();\n    this.state = {\n      flight_num: '',\n      date: \"\",\n      from: \"\",\n      to: \"\",\n      airplane_id: \"\",\n      airplanes: [],\n      hasLoaded: false,\n     }\n\n    this._handleChange = this._handleChange.bind(this);\n    this._handleChangeDate = this._handleChangeDate.bind(this);\n    this._handleChangeFrom = this._handleChangeFrom.bind(this);\n    this._handleChangeTo = this._handleChangeTo.bind(this);\n    this._handleChangeAirplane_id = this._handleChangeAirplane_id.bind(this);\n    this._handleSubmit = this._handleSubmit.bind(this);\n\n    const fetchPlanes = () => {\n      axios.get(SERVER_URL_PLANES).then((results) => {\n        this.setState({\n          airplanes: results.data,\n          hasLoaded: true});\n        setTimeout(fetchPlanes, 4000);\n        })\n      };\n      fetchPlanes();\n  }\n\n  _handleSubmit(event) {\n    event.preventDefault();\n    this.props.onSubmit(this.state.flight_num, this.state.date, this.state.from, this.state.to, this.state.airplane_id);\n    this.setState( {\n      flight_num: '',\n      date: \"\",\n      from: \"\",\n      to: \"\",\n      airplane_id: \"\",\n    }); // Reset the form.\n\n  }\n\n  _handleChange(event){\n    this.setState( { flight_num: event.target.value } );\n  }\n\n  _handleChangeDate(event){\n    this.setState( { date: event.target.value } );\n  }\n\n  _handleChangeFrom(event){\n    this.setState( { from: event.target.value } );\n  }\n\n  _handleChangeTo(event){\n    this.setState( { to: event.target.value } );\n  }\n\n  _handleChangeAirplane_id(event){\n    this.setState( { airplane_id: event.target.value } );\n  }\n\n  render() {\n    return (\n      <form onSubmit={ this._handleSubmit }>\n\n      <label for=\"flight_num\">Flight #</label>\n      <input onChange={this._handleChange} value={this.state.flight_num} type=\"number\" name=\"flight_num\" required />\n\n      <label for=\"date\">Date</label>\n      <input onChange={this._handleChangeDate} type=\"date\" name=\"date\" required />\n\n      <label for=\"from\">From</label>\n      <input onChange={this._handleChangeFrom} type=\"text\" name=\"from\" required />\n\n      <label for=\"to\">To</label>\n      <input onChange={this._handleChangeTo} type=\"text\" name=\"to\" required />\n\n      <label for=\"airplane_id\">Airplane</label>\n      <select onChange={this._handleChangeAirplane_id} type=\"number\" name=\"airplane_id\" value={this.state.value} required>\n      <option disabled selected value> -- select an option -- </option>\n      {this.state.airplanes.map((p) => {\n        return <option value={p.id}>{p.name}</option>\n      })}\n      </select>\n\n\n      <button type=\"submit\" value=\"Tell\" >Create Flight</button>\n\n      </form>\n    );\n  }\n}\n\n\n// -- Flight Gallery -- //\nclass Gallery extends Component{\n  render(){\n      return(\n        <div class=\"flightTable\">\n          <h3>All existing flights</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th width=\"20%\">Date</th>\n                  <th width=\"20%\">Flight</th>\n                  <th width=\"20%\">From > To</th>\n                  <th width=\"20%\">Plane</th>\n                </tr>\n              </thead>\n              {this.props.flights.map( (flight) =>\n              <tbody>\n                <tr>\n                  <td align=\"center\">{flight.date}</td>\n                  <td align=\"center\"><Link to={ '/flight/' + flight.id }> {flight.flight_num}</Link></td>\n                  <td align=\"center\">{flight.from ? flight.from.toUpperCase() : \"\" } ✈ {flight.to ? flight.to.toUpperCase() : \"\" }</td>\n                  <td align=\"center\">{flight.airplane_id}</td>\n                </tr>\n              </tbody>\n              )}\n            </table>\n        </div>\n      );\n  }\n}\n\n\nexport default Flights;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    return (\n        <div>\n            <h2>🔥 Welcome to CrashTastic Airlines, what would you like to do today? 🔥</h2>\n            <p><Link to=\"/admin/flights\">Create a Flight</Link></p>\n            <p><Link to=\"/admin/airplanes\">Create an Airplane</Link></p>\n        </div>\n    )\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Footer extends Component {\n  render() {\n    const footerStyle = {\n      padding: \"50px 0 30px 0\",\n      color: \"grey\",\n      fontSize: \"12px\",\n      textAlign: \"center\",\n    }\n    return(\n      <div style={footerStyle}>\n        \"Thank you\" for booking your flights with us.\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\n// HashRouter is strongly preffered to save headaches with deployment.\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Signup from './components/Signup';\nimport Signin from './components/Signin';\nimport Signout from './components/Signout';\nimport Search from './components/Search';\nimport BookFlight from './components/BookFlight';\nimport Test from './components/Test';\nimport UserProfile from './components/UserProfile';\nimport Users from './components/Users';\nimport Navbar from './components/NavBar';\nimport Airplanes from './components/Airplanes';\nimport Flights from './components/Flights';\nimport AdminHome from './components/AdminHome';\nimport Footer from './components/Footer';\n\n\n// Not a functional component. It's just a collection of JSX.\nconst Routes = (\n    <Router>\n    <div style={{\n      maxWidth: \"1000px\",\n      margin: \"0 auto\",\n      textAlign: \"center\"\n    }}>\n      <Navbar />\n          <div>\n              <Route exact path=\"/\" component={ Home } />\n              <Route exact path=\"/signup\" component={ Signup } />\n              <Route exact path=\"/signin\" component={ Signin } />\n              <Route exact path=\"/signout\" component={ Signout } />\n              <Route exact path=\"/search\" component={ Search } />\n              <Route exact path=\"/flights\" component={ Test } />\n              <Route exact path=\"/admin\" component={ AdminHome } />\n              <Route exact path=\"/admin/airplanes\" component={ Airplanes } />\n              <Route exact path=\"/admin/flights\" component={ Flights } />\n              <Route path=\"/flight/:id\" component={ BookFlight } />\n              <Route exact path=\"/users\" component={ Users } />\n              <Route path=\"/user/:id\" component={ UserProfile } />\n          </div>\n        <Footer />\n      </div>\n    </Router>\n);\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(Routes, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}